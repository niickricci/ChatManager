@{
    ViewBag.Title = "Chat Rooms";
}

<div style="display:grid; grid-template-columns: 65px auto; align-items:center">
    @if (ChatManager.Models.OnlineUsers.GetSessionUser().IsAdmin)
    {
        @*@Helper.ImageCmd("ChatRoom", "Logs", "/Content/UI-Icons/chatRoom.png", "chatRoomIcon", "Journal de conversations")*@
        <a href="@Url.Action("Logs")">
            <img src="@Url.Content("/Content/UI-Icons/chatRoom.png")" style="width:56px;" title="Journal de conversations" />
        </a>
    }
    else
    {
        <img src="/Content/UI-Icons/chatRoom.png" style="width:56px" />
    }
    <h3>Salle de discussions</h3>
</div>
<hr />

<div class="main">

    <div style="display:grid; grid-template-columns:65px auto; column-gap:10px;">
        @*Container d'amis*@
        <div class="friendsListContainer" id="friendsListContainer"
             title="Cliquez sur un de vos amis pour clavarder avec lui...">
            <!---Partial Refresh for Users Frriends List-->
        </div>

        <div>
            <div>
                @*Container for chat*@
                <div class="messagesPanel" id="messagesPanel" title="Cliquez sur un de vos messages pour l'éditer...">
                    <!---Partial Refresh for Users Frriends List-->
                    <div class="messagesHeader">
                        <h4>Sélectionnez un ami...</h4>
                    </div>
                    <!-------------------------------------------->
                </div>

            </div>
            @*Send messages container/input*@
            @*Note: Show only when friend is selected*@
            <div class="sendMessageLayout" id="sendMessagePanel">
                <input id="message"
                       class="form-control"
                       style="width:100% !important; max-width:1000px !important;"
                       placeholder="Tapez votre message ici ..."
                       title="Les urls d'image sont prises en compte." />
                <span id="send"
                      class="icon fa fa-paper-plane"
                      title="Envoyer"
                      data-placement="bottom">
                </span>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            //initTimeout(120);
            let friendsPanelUpdater = new PartialRefresh("@Url.Action("GetFriendsList")", "friendsListContainer", 5, UpdateFriendsListUIEventCallbacks);
            let messagesPanelUpdater = new PartialRefresh("@Url.Action("GetChatRoom")", "messagesPanel", 5, UpdateMessagesPanelUIEventCallbacks);
            let currentTargetId = @Convert.ToInt32(Session["currentChatTarget"]);
            if (currentTargetId == 0)
                $("#sendMessagePanel").hide();

            function UpdateFriendsListUIEventCallbacks() {
                $(".unselectedTarget").click(function () {
                    var userId = $(this).attr("userid");
                    ajaxActionCall("@Url.Action("SetCurrentTarget")" + "?userId=" + userId, () => { friendsPanelUpdater.refresh(true); messagesPanelUpdater.refresh(true); });
                    $("#sendMessagePanel").show();
                })
            }

            function ajaxActionCall(url, callback) {
                $.ajax({
                    url: url,
                    success: function (response) {
                        callback(response);
                    },
                    error: function (xhr, status, error) {
                        // Handle errors if needed
                        console.error("AJAX request failed:", status, error);
                    }
                });
            }

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////
            // Message sender handling
            function sendMessage() {
                var message = $('#message').val();
                $('#message').val("");
                if (message != "") {
                    messagesPanelUpdater.send("@Url.Action("SendMessage")" + "?message=" + message, UpdateMessagesPanelUIEventCallbacks);
                }
            }
            $('#message').keypress(function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                if (keycode == '13') {
                    sendMessage();
                }
            });
            //$('#message').focus(function (event) {
            //    ajaxActionCall("/chat/IsTyping");
            //});
            //$('#message').blur(function (event) {
            //    ajaxActionCall("/chat/StopTyping");
            //});
            $(document).on('keyup', function (event) {
                if (event.key == "Escape") {
                    $("#message").val("");
                }
            });
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////


            let editor = null;
            let targetedMessageContainer = null;

            function deleteMessageEditor() {
                if (editor != null) {
                    editor.remove();
                    messagesPanelUpdater.restart();
                    editor = null;
                }
                if (targetedMessageContainer != null)
                    targetedMessageContainer.show();
            }
            $(document).click(function () { deleteMessageEditor(); })

            function createMessageEditor(messageId) {
                deleteMessageEditor();
                messagesPanelUpdater.pause();
                targetedMessageContainer = $(`#sent_${messageId}`);

                messagesPanelUpdater.command("@Url.Action("GetMessage")" + "?messageId=" + messageId, function (messageText) {
                    console.log(messageText)
                    targetedMessageContainer.hide();
                    let input = $(`<textarea>${messageText.trim()}</textarea>"`);
                    let acceptCmd = $(`<span class="icon smallerIcon fa fa-check" title="Modifier"></span>`);
                    let deleteCmd = $(`<span class="icon smallerIcon fa fa-trash" title="Effacer ce message"></span>`);
                    editor = $(`<div class="messageEditorContainer" id="messageEditor" >`);
                    editor.append(input, acceptCmd, deleteCmd);
                    editor.insertAfter(targetedMessageContainer);
                    input.height(input[0].scrollHeight - 20);
                    input.focus();
                    input.val(input.val() + ' ');
                    input.keyup(function (event) {
                        if (event.key == "Escape") {
                            targetedMessageContainer.show();
                            deleteMessageEditor();
                            messagesPanelUpdater.restart();
                        }
                    })
                    input.click(function (event) {
                        event.stopPropagation()
                    })
                    acceptCmd.click(function () {
                        messagesPanelUpdater.edit("@Url.Action("UpdateMessage")" + "?messageId=" + messageId + "&" +`message=${input.val()}`);
                        messagesPanelUpdater.restart();
                    })
                    deleteCmd.click(function () {
                        bootbox.confirm("Effacer ce message?", function (result) {
                            if (result) {
                                messagesPanelUpdater.delete("@Url.Action("DeleteMessage")" + "?messageId=" + messageId);
                                messagesPanelUpdater.restart();
                            }
                        })
                    })
                })
            }

            function UpdateMessagesPanelUIEventCallbacks() {
                $("#typing").hide();
                $(".editMessage").hide();
                $("#messagesPanel").scrollTop($("#messagesPanel")[0].scrollHeight + 100);

                $(".contentImage").click(function (event) {
                    event.stopPropagation();
                })
                $("a").click(function (event) {
                    event.stopPropagation();
                })
                $(".sent").click(function () {
                    var messageId = $(this).attr("id").split("_")[1];
                    createMessageEditor(messageId);
                });
            }

            //setInterval(() => { ajaxActionCall("/Chat/IsTargetTyping", UpdateTyping); }, 3000);

            //function UpdateTyping(show) {
            //    if (show)
            //        $("#typing").show();
            //    else
            //        $("#typing").hide();
            //}

            $("#send").click(function () {
                sendMessage();
            })
        })
    </script>
}